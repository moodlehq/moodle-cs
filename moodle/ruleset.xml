<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/squizlabs/PHP_CodeSniffer/master/phpcs.xsd"
    name="moodle"
    namespace="MoodleHQ\MoodleCS\moodle">

    <description>The Moodle PHP CodeSniffer coding style standard</description>

    <arg name="extensions" value="php" />
    <arg name="encoding" value="utf-8" />

    <rule ref="Generic.Classes.DuplicateClassName"/>
    <rule ref="Generic.Classes.OpeningBraceSameLine"/>

    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>

    <rule ref="Generic.ControlStructures.InlineControlStructure"/>

    <rule ref="Generic.Files.LineEndings"/>
    <rule ref="Generic.Files.EndFileNewline"/>

    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie"/>

    <rule ref="Generic.NamingConventions.ConstructorName"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>

    <rule ref="Generic.PHP.DisallowShortOpenTag"/>
    <rule ref="Generic.PHP.LowerCaseConstant"/>

    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <properties>
            <property name="ignoreIndentationTokens" type="array"
                value="T_CLOSE_TAG"/>
        </properties>
    </rule>
    <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>

    <rule ref="Squiz.Classes.DuplicateProperty"/>
    <rule ref="Squiz.Classes.LowercaseClassKeywords"/>
    <rule ref="Squiz.Classes.SelfMemberReference"/>

    <rule ref="Generic.CodeAnalysis.EmptyStatement"/>

    <rule ref="Squiz.Commenting.DocCommentAlignment"/>
    <rule ref="Squiz.Commenting.EmptyCatchComment"/>

    <rule ref="Squiz.ControlStructures.ElseIfDeclaration"/>
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>

    <rule ref="Squiz.Functions.LowercaseFunctionKeywords"/>
    <rule ref="PSR2.Methods.MethodDeclaration"/>

    <rule ref="Squiz.Operators.ValidLogicalOperators">
        <type>warning</type>
    </rule>

    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.PHP.CommentedOutCode">
        <properties>
            <property name="maxPercentage" value="40"/>
        </properties>
    </rule>

    <!-- Check phpdoc comments for functions -->
    <rule ref="Squiz.Commenting.FunctionComment"/>

    <!-- We do not enforce specific formatting of @params with regards spacing -->
    <rule ref="Squiz.Commenting.FunctionComment.SpacingAfterParamType">
      <severity>0</severity>
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment.SpacingAfterParamName">
      <severity>0</severity>
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment.ParamCommentAlignment">
      <severity>0</severity>
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment.ParamCommentAlignmentExceeded">
      <severity>0</severity>
    </rule>

    <!-- Parameter comments are optional, but recommended -->
    <rule ref="Squiz.Commenting.FunctionComment.MissingParamComment">
      <type>warning</type>
      <severity>2</severity>
    </rule>

    <!-- Parameter comments do not need to start with a capital letter -->
    <rule ref="Squiz.Commenting.FunctionComment.ParamCommentNotCapital">
      <severity>0</severity>
    </rule>

    <!-- Parameter comments do not need to end with a full stop -->
    <rule ref="Squiz.Commenting.FunctionComment.ParamCommentFullStop">
      <severity>0</severity>
    </rule>

    <!-- Type hints are optional, but strongly recommended -->
    <rule ref="Squiz.Commenting.FunctionComment.TypeHintMissing">
      <type>warning</type>
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment.ScalarTypeHintMissing">
      <type>warning</type>
    </rule>

    <!--
      Sadly this rule does not let you configure it to ignore missing returns if no return is present.
      We do not recommend use of `@return void` but they mandate it.
    -->
    <rule ref="Squiz.Commenting.FunctionComment.MissingReturn">
      <severity>0</severity>
    </rule>


    <rule ref="Squiz.Commenting.FunctionCommentThrowTag"/>

    <rule ref="Squiz.Scope.MethodScope"/>
    <rule ref="Squiz.Scope.StaticThisUsage"/>

    <rule ref="Squiz.WhiteSpace.OperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>
    <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent"/>
    <rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>
    <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>
    <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>

    <rule ref="Zend.Files.ClosingTag"/>

    <!-- Disable this exact error unless it's approved -->
    <rule ref="moodle.Commenting.InlineComment.SpacingAfter">
        <severity>0</severity>
    </rule>

    <!-- Let's add the complete PHPCompatibility standard -->
    <rule ref="PHPCompatibility" />

</ruleset>
